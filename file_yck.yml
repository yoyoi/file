---
# rpi_file_management.yml
# 這個 playbook 用於在樹莓派上新增和刪除文件

- name: 樹莓派文件管理
  hosts: raspberry_pi
  become: yes  # 使用 sudo 權限
  vars:
    # 要創建的文件列表
    files_to_create:
      - path: /home/pi/test_file1.txt
        content: "這是測試文件 1 的內容"
        owner: pi
        group: pi
        mode: '0644'
      - path: /home/pi/test_file2.txt
        content: "這是測試文件 2 的內容"
        owner: pi
        group: pi
        mode: '0644'
      - path: /home/pi/scripts/test_script.sh
        content: |
          #!/bin/bash
          echo "這是一個測試腳本"
          date
          echo "目前使用者: $(whoami)"
        owner: pi
        group: pi
        mode: '0755'
    
    # 要刪除的文件列表
    files_to_delete:
      - /home/pi/old_file1.txt
      - /home/pi/old_file2.txt
      - /home/pi/old_scripts/script.sh

  tasks:
    # 確保目錄存在
    - name: 確保所需目錄存在
      file:
        path: "{{ item.path | dirname }}"
        state: directory
        owner: "{{ item.owner | default('pi') }}"
        group: "{{ item.group | default('pi') }}"
        mode: '0755'
      loop: "{{ files_to_create }}"
      when: "'/' in item.path"
    
    # 創建文件
    - name: 創建指定文件
      copy:
        dest: "{{ item.path }}"
        content: "{{ item.content }}"
        owner: "{{ item.owner | default('pi') }}"
        group: "{{ item.group | default('pi') }}"
        mode: "{{ item.mode | default('0644') }}"
      loop: "{{ files_to_create }}"
    
    # 刪除文件
    - name: 刪除指定文件
      file:
        path: "{{ item }}"
        state: absent
      loop: "{{ files_to_delete }}"
      
    # 檢查創建的文件是否存在
    - name: 檢查文件是否成功創建
      stat:
        path: "{{ item.path }}"
      loop: "{{ files_to_create }}"
      register: file_check
    
    # 顯示結果
    - name: 顯示結果
      debug:
        msg: "文件 {{ item.item.path }} {{ '已成功創建' if item.stat.exists else '創建失敗' }}"
      loop: "{{ file_check.results }}"